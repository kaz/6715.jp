{"pageProps":{"tag":"Raspberry Pi","entries":[{"type":"article","slug":"12","body":"作ります\n\n## イーサネットコンバータ\n\n無線LANの電波を有線に変換するやつ（適当）\n\n公衆無線LANをイーサネットコンバータで有線ネットワークにつなげると嬉しいね、みたいな。\nてかこれルータじゃないか？\n\n## 準備\n\n突然ですがArchLinuxは神です。\nとりあえずRaspiにArchLinuxARMを入れます。\n\nx86_64の一般的なやつと比べるとインスコ難易度は低めです。\n\nここのInstallationをみましょう\n\nhttps://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3\n\nなんかmacOSでやろうとしたら詰んだので、Linux上でやることをオススメします。\nボクはArchLinux(x86_64) on VirtualBox on macOSでやったんですが、非常に闇だったのでおすすめしません。\nWindowsは知りません。ガンバッテ。\n\nちなみにx86_64版のインストールはこの記事がわかりやすいですね！！１１\n\nhttps://trap.jp/post/39/\n\n## 設定\n\n### IPを固定しよう\n\n先にLAN側をやりましょう。\n\n今回は`10.0.0.0/24`なネットワークを作ってみます。\nArchLinuxは神なので[netctl](https://wiki.archlinuxjp.org/index.php/Netctl)っていう神ツールが入っています。\n\nこの設定ファイル`/etc/netctl/eth0`を書いて、\n```\nInterface=eth0\nConnection=ethernet\nIP=static\nAddress=('10.0.0.1/24')\n```\n\n```sh\n# netctl start eth0\n# netctl enable eth0\n```\n\nこんなかんじ。\n自分のIPアドレスは`10.0.0.1`にしました。\n\n### DHCP/DNSサーバになろう\n\n市販のルーターにはだいたいついてるDHCP/DNS機能ですが、**dnsmasq**ってのがありまして、この人がこの2つを兼任してくれます。\n\nとりあえずインストール\n```sh\n# pacman -S dnsmasq\n```\n\nで、設定ファイル`/etc/dnsmasq.conf`に追記します。\n```\ninterface=eth0\nbind-interfaces\ndhcp-range=10.0.0.2,10.0.0.254,2h\ndhcp-option=option:netmask,255.255.255.0\ndhcp-option=option:router,10.0.0.1\ndhcp-option=option:dns-server,10.0.0.1\n```\n\nそしたらdnsmasqを起動します。\n```sh\n# systemctl start dnsmasq\n# systemctl enable dnsmasq\n```\n\nこれで、このRaspiがデフォルトゲートウェイと化したので、他の人がRaspiにガンガンパケットを送ってくるようになります。\nでもルーティングしてないから死ぬね。\n\n\n### インターネットに繋ごう\n\nそしたらWAN側をなんとかします。\nLAN側にeth0を向けてて、WAN側にはwlan0を使います。\n\nArchLinuxは神なので、**wifi-menu**っていう神ツールがはいってます。（たぶんnetctlの一部）\n\n```sh\n# wifi-menu -o\n```\n\nってやったら後はウィザード形式で設定できてしまいます。\n簡単！！！説明することがない！！\n\n再起動しても自動でつながるようにしておきます。\n```sh\n# netctl list\n* eth0\n* wlan0-Wi2_club\n  wlan0-TokyoTech\n\n# netctl enable wlan0-Wi2_club\n```\n\n今回は公衆無線LANのWi2に繋いでいます。\nnetctlを使えば場所によって手軽にプロファイルを切り替えられる！！便利だ！！！！\n\n### ルーティングしよう\n\nじゃあ、色んな所から届いてるパケットをうまく捌きましょう。\n\nまず、パケット転送を有効にします。\n```sh\n# sysctl net.ipv4.ip_forward=1\n```\n\n再起動後も有効になるように`/etc/sysctl.d/ipforward.conf`を作成します。\n```\nnet.ipv4.ip_forward=1\n```\n\nあとは**iptables**さんが優秀なので、例によって設定を書くだけです。\n\n`/etc/iptables/iptables.rules`を作成します。\n```\n*filter\n:INPUT ACCEPT [231:17979]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [150:14976]\n-A FORWARD -i eth0 -o wlan0 -j ACCEPT\n-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nCOMMIT\n\n*nat\n:PREROUTING ACCEPT [10:734]\n:INPUT ACCEPT [4:314]\n:OUTPUT ACCEPT [2:134]\n:POSTROUTING ACCEPT [0:0]\n-A PREROUTING -d 10.0.0.1 -i eth0 -j ACCEPT\n-A POSTROUTING -s 10.0.0.0/24 -o wlan0 -j MASQUERADE\nCOMMIT\n```\n\n自分宛てのパケットは受け取って、それ以外はNAPT(IPマスカレード)でうまいこと書き換えて流します。\n\niptablesの設定を有効化します。\n```sh\n# systemctl start iptables\n# systemctl enable iptables\n```\n\n## できあがり！\n\n完成です。\nイーサネットコンバータもといルータと化したRaspberry Pi 3です。\n\nwlan0のMACアドレスをWi2とかの公衆無線LANに登録すれば、無制限に分配できるマンになれます。\n\neth0が100Mbpsまでしか通れないので、ちょっと大きいことをしようとするとかなり辛いです。\nギガビット対応のUSB接続LANアダプタつけたらちょっとだけ速くなります。\nでもUSB2.0なので最大転送速度は理論値480Mbpsくらいが限界です。かなしい。\n","title":"Raspberry Pi 3 で作るイーサネットコンバータというかルータ","image":null,"tags":["Raspberry Pi","ネットワーク"],"date":"2016-10-16T00:00:00.000Z","updated":"2021-01-07T09:09:45.000Z"}]},"__N_SSG":true}