{"pageProps":{"article":{"type":"article","slug":"8","body":"このはちゃんかわいい\n\nownCloud、便利なんですがファイルをVPS上に記録してるとConoHaはデフォで50GBしか使えないので辛い。\n\n増量しても良いんですけど、どうせなら容量単価の安いオブジェクトストレージに乗せられないか？というお話です。\n\n乗せられないか？というか、乗るんですけど。\n\n## ownCloudのインストール\n\n[公式](https://owncloud.org/install/)から落として設置してアクセスすれば初期設定画面になってあとはノリでなんとかなるので、\n特に書くこともないんですが、nginxを使ってる場合はキチンと設定しないとダメなので、そこだけ注意です。\n\n参考：[Nginx Configuration for the ownCloud 9.x Branches](https://doc.owncloud.org/server/9.1/admin_manual/installation/nginx_owncloud_9x.html?highlight=nginx)\n\n## オブジェクトストレージ上にファイルを置く\n\n[無制限ストレージ with 新しいConoHa Object Storage and ownCloud](http://qiita.com/ukitiyan/items/aaa1a2f3fe6e820007c0)\n\n↑みたいな、オブジェクトストレージをExternalStorageとして接続する方法もありますが、\nこれだとExternalStorageフォルダ外に置いたファイルが普通にローカルに記録されちゃうので、ちょっと微妙。\n\n全てのユーザがどこにファイルを置いてもオブジェクトストレージに置かれる方が好ましいです。\nということで、オブジェクトストレージをPrimaryStorageとして設定しましょう。\n\nConoHaのオブジェクトストレージの正体はOpenStack Swiftなので、ownCloudに最初から入ってる機能でなんとかなります。\n\nまず、予めコンテナを作成しておく必要があるのですが、ConoHaのオブジェクトストレージにはGUIがないので、コマンドラインツールでなんとかしましょう。\nとりえあず、pipを使える環境にしてから、\n\n```bash\n$ pip install python-swiftclient python-keystoneclient\n$ export OS_AUTH_URL=\"https://identity.tyo1.conoha.io/v2.0\"\n$ export OS_TENANT_NAME=\"[テナント名]\"\n$ export OS_USERNAME=\"[APIユーザ名]\"\n$ export OS_PASSWORD=\"[APIユーザPW]\"\n$ swift post \"[作成するコンテナ名]\"\n$ swift list\n```\n\nこんなかんじで、作成したコンテナ名が表示されればOKです。\n\nownCloudの初期設定を終えると、`config/config.php`が作成されるハズなので、このファイルに設定を追記します。\n\n```php\n$CONFIG = array (\n  ...\n\n  'objectstore' =>\n  array (\n    'class' => 'OC\\\\Files\\\\ObjectStore\\\\Swift',\n    'arguments' =>\n    array (\n      'serviceName' => 'Object Storage Service',\n      'url' => 'https://identity.tyo1.conoha.io/v2.0',\n      'region' => 'tyo1',\n      'tenantName' => '[テナント名]',\n      'username' => '[APIユーザ名]',\n      'password' => '[APIユーザPW]',\n      'container' => '[作成したコンテナ名]',\n    ),\n  ),\n\n  ...\n);\n```\n\nこれでOK。\n見た目はなんにも変わってないので設定できてるのか不安になりますが、\n適当なファイルをアップロードしてみてから、\n\n```bash\n$ swift list [作成したコンテナ名]\n```\n\nとやって`urn:oid:***`みたいなファイルが作成されていればOKです。\n\nこれで、ownCloud上の全てのファイルがオブジェクトストレージに置かれるようになります。\nこの設定をすると、今までローカルに保存していたファイルは参照できなくなってしまう（開こうとするとエラーになる）ので、\n運用中に切り替えるのは避けて、インストールした直後に設定を行うのがベターです。\n\n\n## かくして\n\n格安で大量のファイルを保存できる環境が手に入りました。やった！\n\nちなみに、CUIからオブジェクトストレージを操作するツールはOpenStack公式のpython-swiftclient以外にも、\nConoHaの中の人が作成されている[conoha-ojs](https://github.com/hironobu-s/conoha-ojs)もあります。\n\n[conoha-ojs](https://github.com/hironobu-s/conoha-ojs)\n","title":"ownCloudをConoHaのオブジェクトストレージに乗せる","image":null,"tags":["ConoHa","OpenStack Swift","ownCloud"],"date":"2016-07-27T00:00:00.000Z","updated":"2021-01-07T09:09:45.000Z"},"description":"このはちゃんかわいい ownCloud、便利なんですがファイルをVPS上に記録してるとConoHaはデフォで50GBしか使えないので辛い。 増量しても良いんですけど、どうせなら容量単価の安いオブジェ…","content":"<p>このはちゃんかわいい<p>ownCloud、便利なんですがファイルをVPS上に記録してるとConoHaはデフォで50GBしか使えないので辛い。<p>増量しても良いんですけど、どうせなら容量単価の安いオブジェクトストレージに乗せられないか？というお話です。<p>乗せられないか？というか、乗るんですけど。<h2>ownCloudのインストール</h2><p><a href=https://owncloud.org/install/ rel=\"noopener noreferrer\"target=_blank>公式</a>から落として設置してアクセスすれば初期設定画面になってあとはノリでなんとかなるので、 特に書くこともないんですが、nginxを使ってる場合はキチンと設定しないとダメなので、そこだけ注意です。<p>参考：<a href=\"https://doc.owncloud.org/server/9.1/admin_manual/installation/nginx_owncloud_9x.html?highlight=nginx\"rel=\"noopener noreferrer\"target=_blank>Nginx Configuration for the ownCloud 9.x Branches</a><h2>オブジェクトストレージ上にファイルを置く</h2><aside><a href=https://qiita.com/ukitiyan/items/aaa1a2f3fe6e820007c0 rel=\"noopener noreferrer\"target=_blank style=\"background-image:url(https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Farticle-ogp-background-1150d8b18a7c15795b701a55ae908f94.png?ixlib=rb-4.0.0&#38w=1200&#38mark64=aHR0cHM6Ly9xaWl0YS11c2VyLWNvbnRlbnRzLmltZ2l4Lm5ldC9-dGV4dD9peGxpYj1yYi00LjAuMCZ3PTg0MCZoPTM4MCZ0eHQ2ND01NFNoNVlpMjZabVE0NEs1NDRPSTQ0T3M0NE84NDRLNElIZHBkR2dnNXBhdzQ0R1g0NEdFUTI5dWIwaGhJRTlpYW1WamRDQlRkRzl5WVdkbElHRnVaQ0J2ZDI1RGJHOTFaQSZ0eHQtY29sb3I9JTIzMzMzJnR4dC1mb250PUhpcmFnaW5vJTIwU2FucyUyMFc2JnR4dC1zaXplPTU0JnR4dC1jbGlwPWVsbGlwc2lzJnR4dC1hbGlnbj1jZW50ZXIlMkNtaWRkbGUmcz0xMWQ4MmViYjY3MzRjNDUyNTFkNGQzMDEyM2VkM2ZiMg&#38mark-align=center%2Cmiddle&#38blend64=aHR0cHM6Ly9xaWl0YS11c2VyLWNvbnRlbnRzLmltZ2l4Lm5ldC9-dGV4dD9peGxpYj1yYi00LjAuMCZ3PTg0MCZoPTUwMCZ0eHQ2ND1RSFZyYVhScGVXRnUmdHh0LWNvbG9yPSUyMzMzMyZ0eHQtZm9udD1IaXJhZ2lubyUyMFNhbnMlMjBXNiZ0eHQtc2l6ZT00NSZ0eHQtYWxpZ249cmlnaHQlMkNib3R0b20mcz03ZWRkY2Y2OTk4YTY4ZjEzN2FmMTE0ZGI0M2M5NWRhNw&#38blend-align=center%2Cmiddle&#38blend-mode=normal&#38s=d805ffb7b630b07b1cfc770e435c05f0)\"><div><strong>無制限ストレージ with 新しいConoHa Object Storage and ownCloud - Qiita</strong><cite>qiita.com</cite><q cite=https://qiita.com/ukitiyan/items/aaa1a2f3fe6e820007c0>はじめに OSCでGMOさんからConoHaちゃんのステッカーとボールペンを頂いたのでConoHaとownCloudのコラボレーションネタを書かせて頂きます！ 実は去年からConoHaちゃんをネタに何回かLTをやらせて頂いたの...</q></div></a></aside><p>↑みたいな、オブジェクトストレージをExternalStorageとして接続する方法もありますが、 これだとExternalStorageフォルダ外に置いたファイルが普通にローカルに記録されちゃうので、ちょっと微妙。<p>全てのユーザがどこにファイルを置いてもオブジェクトストレージに置かれる方が好ましいです。 ということで、オブジェクトストレージをPrimaryStorageとして設定しましょう。<p>ConoHaのオブジェクトストレージの正体はOpenStack Swiftなので、ownCloudに最初から入ってる機能でなんとかなります。<p>まず、予めコンテナを作成しておく必要があるのですが、ConoHaのオブジェクトストレージにはGUIがないので、コマンドラインツールでなんとかしましょう。 とりえあず、pipを使える環境にしてから、<pre><code class=\"hljs language-bash\">$ pip install python-swiftclient python-keystoneclient\n$ <span class=hljs-built_in>export</span> OS_AUTH_URL=<span class=hljs-string>\"https://identity.tyo1.conoha.io/v2.0\"</span>\n$ <span class=hljs-built_in>export</span> OS_TENANT_NAME=<span class=hljs-string>\"[テナント名]\"</span>\n$ <span class=hljs-built_in>export</span> OS_USERNAME=<span class=hljs-string>\"[APIユーザ名]\"</span>\n$ <span class=hljs-built_in>export</span> OS_PASSWORD=<span class=hljs-string>\"[APIユーザPW]\"</span>\n$ swift post <span class=hljs-string>\"[作成するコンテナ名]\"</span>\n$ swift list\n</code></pre><p>こんなかんじで、作成したコンテナ名が表示されればOKです。<p>ownCloudの初期設定を終えると、<code>config/config.php</code>が作成されるハズなので、このファイルに設定を追記します。<pre><code class=\"hljs language-php\"><span class=hljs-variable>$CONFIG</span> = <span class=hljs-keyword>array</span> (\n  ...\n\n  <span class=hljs-string>'objectstore'</span> =>\n  <span class=hljs-keyword>array</span> (\n    <span class=hljs-string>'class'</span> => <span class=hljs-string>'OC\\\\Files\\\\ObjectStore\\\\Swift'</span>,\n    <span class=hljs-string>'arguments'</span> =>\n    <span class=hljs-keyword>array</span> (\n      <span class=hljs-string>'serviceName'</span> => <span class=hljs-string>'Object Storage Service'</span>,\n      <span class=hljs-string>'url'</span> => <span class=hljs-string>'https://identity.tyo1.conoha.io/v2.0'</span>,\n      <span class=hljs-string>'region'</span> => <span class=hljs-string>'tyo1'</span>,\n      <span class=hljs-string>'tenantName'</span> => <span class=hljs-string>'[テナント名]'</span>,\n      <span class=hljs-string>'username'</span> => <span class=hljs-string>'[APIユーザ名]'</span>,\n      <span class=hljs-string>'password'</span> => <span class=hljs-string>'[APIユーザPW]'</span>,\n      <span class=hljs-string>'container'</span> => <span class=hljs-string>'[作成したコンテナ名]'</span>,\n    ),\n  ),\n\n  ...\n);\n</code></pre><p>これでOK。 見た目はなんにも変わってないので設定できてるのか不安になりますが、 適当なファイルをアップロードしてみてから、<pre><code class=\"hljs language-bash\">$ swift list [作成したコンテナ名]\n</code></pre><p>とやって<code>urn:oid:***</code>みたいなファイルが作成されていればOKです。<p>これで、ownCloud上の全てのファイルがオブジェクトストレージに置かれるようになります。 この設定をすると、今までローカルに保存していたファイルは参照できなくなってしまう（開こうとするとエラーになる）ので、 運用中に切り替えるのは避けて、インストールした直後に設定を行うのがベターです。<h2>かくして</h2><p>格安で大量のファイルを保存できる環境が手に入りました。やった！<p>ちなみに、CUIからオブジェクトストレージを操作するツールはOpenStack公式のpython-swiftclient以外にも、 ConoHaの中の人が作成されている<a href=https://github.com/hironobu-s/conoha-ojs rel=\"noopener noreferrer\"target=_blank>conoha-ojs</a>もあります。<aside><a href=https://github.com/hironobu-s/conoha-ojs rel=\"noopener noreferrer\"target=_blank style=background-image:url(https://opengraph.githubassets.com/526b798baecd662d07133511341e5d5e49eb5085426f1d062ae192c5b57cce05/hironobu-s/conoha-ojs)><div><strong>GitHub - hironobu-s/conoha-ojs: CLI-tool for ConoHa Object Storage</strong><cite>github.com</cite><q cite=https://github.com/hironobu-s/conoha-ojs>CLI-tool for ConoHa Object Storage. Contribute to hironobu-s/conoha-ojs development by creating an account on GitHub.</q></div></a></aside>"},"__N_SSG":true}