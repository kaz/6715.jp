{"pageProps":{"article":{"type":"article","slug":"23","body":"Let's Encryptでワイルドカード証明書を発行してみました。\n\n# ワイルドカード証明書\n\n遂に……遂に来ましたね。\nLet's Encryptの**ワイルドカード証明書**が。\n\n[ACME v2 and Wildcard Certificate Support is Live](https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579)\n\n非常におめでたいです🎉\n\nこれで、サブドメインをたくさん切って運用してるサービスなんかの証明書の管理がグッとラクになりますね。\n\n# 早速取得してみる\n\n注意点としては、\n\n- ワイルドカード証明書はACMEv2エンドポイントからのみ発行できる\n- ワイルドカード証明書はDNS-01チャレンジでのみ発行できる\n\n公式の**Certbot**は0.22.0からACMEv2に対応しており、DNS-01チャレンジにも対応してます。\nDNS-01では、`_acme-challenge.example.com`のようなTXTレコードを作成してドメインの所有を確認します。\n\n## 手順\n\n適当にCertbot(certbot-auto)をインストールしたら、以下のようなコマンドを実行します。\n明示的にACMEv2エンドポイントとDNS-01チャレンジを指定する必要がります。\n\n```sh\ncertbot certonly \\\n--manual \\\n--preferred-challenges dns-01 \\\n--server https://acme-v02.api.letsencrypt.org/directory \\\n--domain *.kiritan.com\n```\n\nすると、以下のように「IP記録するけどいい？」って確認されます。\nDNS-01は、実際に証明書を使うサーバー以外からも発行が要求できるんですが、要求元のIPアドレスが記憶されるみたいです。\n\n```\n-------------------------------------------------------------------------------\nNOTE: The IP of this machine will be publicly logged as having requested this\ncertificate. If you're running certbot in manual mode on a machine that is not\nyour server, please ensure you're okay with that.\n\nAre you OK with your IP being logged?\n-------------------------------------------------------------------------------\n(Y)es/(N)o:\n```\n\n進むと、以下のようなレコードを設定しろと言われるので、設定します。\n\n```\n-------------------------------------------------------------------------------\nPlease deploy a DNS TXT record under the name\n_acme-challenge.kiritan.com with the following value:\n\nf4WTOGBdEhZF7aAx9mZof8X9072JVUKDR7FhmUlKiYo\n\nBefore continuing, verify the record is deployed.\n-------------------------------------------------------------------------------\nPress Enter to Continue\n```\n\nボクは[ConoHa](https://www.conoha.jp/referral/?token=sp928CCbwhPZeu0SLEbeVyIhGOsIchLSzaun2yUbKWaR.q89860-OPA)のDNSを使っています。\n普通にWebブラウザからレコードを設定するのはもちろん、API経由で設定もできるので非常に便利です。\nあと、DNSサービス自体は無料です。ふとっばらですね。\n\nついでに宣伝↓\n\n[ConoHaのDNS APIをCLIから叩くやつを作った](/posts/14/)\n\nあと、AWSのRoute53みたいな有名サービスなら、プラグインが存在するので手軽にDNS-01による確認ができるみたいです。\n\n[Certbot Docs » User Guide » DNS Plugins](https://certbot.eff.org/docs/using.html#dns-plugins)\n\n今度ConoHaのDNSでも簡単に証明書がとれるDNS-01プラグインを書いてみようかな？？？\n\n適切にTXTレコードを設定したら、エンターキーを押せば終わり！\n\n![](0.png)\n\n```\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/kiritan.com/fullchain.pem\n```\n\n簡単ですね！\nあとは、HTTPサーバに設定してあげれば夢のワイルドカード証明書によるHTTPS化が完了です！\n\n![](1.png)\n![](2.png)\n\nうわ〜〜ワイルドカードだ〜〜うれしい〜〜\n\n# おわり\n\nTXTレコードを設定するところが自動化できるなら、本当に証明書管理の手間が少なくなると思います。\n\n別のアプローチで管理の手間をなくす記事もあります。見てね。\n\n[lua-nginx-auto-sslで全自動HTTPS](/posts/21/)\n","title":"Let's Encryptのワイルドカード証明書を早速発行してもらう","image":null,"tags":["Let's Encrypt","SSL","セキュリティ","自動化"],"date":"2018-03-14T00:00:00.000Z","updated":"2021-01-08T10:53:56.000Z"},"description":"Let's Encryptでワイルドカード証明書を発行してみました。 ワイルドカード証明書 遂に……遂に来ましたね。 Let's Encryptのワイルドカード証明書が。 ACME v2 and W…","content":"<p>Let's Encryptでワイルドカード証明書を発行してみました。<h1>ワイルドカード証明書</h1><p>遂に……遂に来ましたね。 Let's Encryptの<strong>ワイルドカード証明書</strong>が。<aside><a href=https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579 rel=\"noopener noreferrer\"style=background-image:url(https://aws1.discourse-cdn.com/letsencrypt/original/3X/4/c/4c5760509a18adfc3bc657ba8bd49b301faaa66b.png) target=_blank><div><strong>ACME v2 and Wildcard Certificate Support is Live</strong><cite>community.letsencrypt.org</cite><q cite=https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579>We’re pleased to announce that ACMEv2 and wildcard certificate support is live! With today’s new features we’re continuing to break down barriers for HTTPS adoption across the Web by making it even easier for every website to get and manage certificates. ACMEv2 is an updated version of our ACME pro…</q></div></a></aside><p>非常におめでたいです🎉<p>これで、サブドメインをたくさん切って運用してるサービスなんかの証明書の管理がグッとラクになりますね。<h1>早速取得してみる</h1><p>注意点としては、<ul><li>ワイルドカード証明書はACMEv2エンドポイントからのみ発行できる<li>ワイルドカード証明書はDNS-01チャレンジでのみ発行できる</ul><p>公式の<strong>Certbot</strong>は0.22.0からACMEv2に対応しており、DNS-01チャレンジにも対応してます。 DNS-01では、<code>_acme-challenge.example.com</code>のようなTXTレコードを作成してドメインの所有を確認します。<h2>手順</h2><p>適当にCertbot(certbot-auto)をインストールしたら、以下のようなコマンドを実行します。 明示的にACMEv2エンドポイントとDNS-01チャレンジを指定する必要がります。<pre><code class=\"hljs language-sh\">certbot certonly \\\n--manual \\\n--preferred-challenges dns-01 \\\n--server https://acme-v02.api.letsencrypt.org/directory \\\n--domain *.kiritan.com\n</code></pre><p>すると、以下のように「IP記録するけどいい？」って確認されます。 DNS-01は、実際に証明書を使うサーバー以外からも発行が要求できるんですが、要求元のIPアドレスが記憶されるみたいです。<pre><code class=\"hljs language-python\">-------------------------------------------------------------------------------\nNOTE: The IP of this machine will be publicly logged <span class=hljs-keyword>as</span> having requested this\ncertificate. If yo<span class=hljs-string>u're running certbot in manual mode on a machine that is not\nyour server, please ensure you'</span>re okay <span class=hljs-keyword>with</span> that.\n\nAre you OK <span class=hljs-keyword>with</span> your IP being logged?\n-------------------------------------------------------------------------------\n(Y)es/(N)o:\n</code></pre><p>進むと、以下のようなレコードを設定しろと言われるので、設定します。<pre><code class=\"hljs language-pgsql\"><span class=hljs-comment>-------------------------------------------------------------------------------</span>\nPlease deploy a DNS TXT <span class=hljs-type>record</span> under the <span class=hljs-type>name</span>\n_acme-challenge.kiritan.com <span class=hljs-keyword>with</span> the <span class=hljs-keyword>following</span> <span class=hljs-keyword>value</span>:\n\nf4WTOGBdEhZF7aAx9mZof8X9072JVUKDR7FhmUlKiYo\n\n<span class=hljs-keyword>Before</span> continuing, verify the <span class=hljs-type>record</span> <span class=hljs-keyword>is</span> deployed.\n<span class=hljs-comment>-------------------------------------------------------------------------------</span>\nPress Enter <span class=hljs-keyword>to</span> <span class=hljs-keyword>Continue</span>\n</code></pre><p>ボクは<a href=\"https://www.conoha.jp/referral/?token=sp928CCbwhPZeu0SLEbeVyIhGOsIchLSzaun2yUbKWaR.q89860-OPA\"rel=\"noopener noreferrer\"target=_blank>ConoHa</a>のDNSを使っています。 普通にWebブラウザからレコードを設定するのはもちろん、API経由で設定もできるので非常に便利です。 あと、DNSサービス自体は無料です。ふとっばらですね。<p>ついでに宣伝↓<aside><a href=/posts/14/ style=background-image:url(https://res.cloudinary.com/narusejun/image/twitter_name/h_128/sekai67.jpg)><div><strong>ConoHaのDNS APIをCLIから叩くやつを作った</strong><cite>6715.jp</cite><q cite=https://6715.jp/posts/14/>作りました ConoHa Advent Calendar 2016 24日目の記事です。 ConoHa Advent Calendar 2016 ConoHaのDNS ConoHaには無料で使えるD…</q></div></a></aside><p>あと、AWSのRoute53みたいな有名サービスなら、プラグインが存在するので手軽にDNS-01による確認ができるみたいです。<aside><a href=https://certbot.eff.org/docs/using.html#dns-plugins rel=\"noopener noreferrer\"target=_blank><div><strong>User Guide — Certbot 1.19.0.dev0 documentation</strong><cite>certbot.eff.org</cite><q cite=https://certbot.eff.org/docs/using.html#dns-plugins></q></div></a></aside><p>今度ConoHaのDNSでも簡単に証明書がとれるDNS-01プラグインを書いてみようかな？？？<p>適切にTXTレコードを設定したら、エンターキーを押せば終わり！<p><img alt src=0.png><pre><code class=\"hljs language-awk\">IMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   <span class=hljs-regexp>/etc/</span>letsencrypt<span class=hljs-regexp>/live/</span>kiritan.com/fullchain.pem\n</code></pre><p>簡単ですね！ あとは、HTTPサーバに設定してあげれば夢のワイルドカード証明書によるHTTPS化が完了です！<p><img alt src=1.png> <img alt src=2.png><p>うわ〜〜ワイルドカードだ〜〜うれしい〜〜<h1>おわり</h1><p>TXTレコードを設定するところが自動化できるなら、本当に証明書管理の手間が少なくなると思います。<p>別のアプローチで管理の手間をなくす記事もあります。見てね。<aside><a href=/posts/21/ style=background-image:url(https://res.cloudinary.com/narusejun/image/twitter_name/h_128/sekai67.jpg)><div><strong>lua-nginx-auto-sslで全自動HTTPS</strong><cite>6715.jp</cite><q cite=https://6715.jp/posts/21/>備忘録！ 全自動HTTPS Let's Encryptの登場でHTTPSがぐっと身近になりましたが、やっぱり証明書をホスト名毎に取得するのは結構面倒ですし、90日毎に更新しなきゃいけないのも大変です…</q></div></a></aside>"},"__N_SSG":true}